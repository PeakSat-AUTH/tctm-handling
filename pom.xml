<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>gr.spacedot</groupId>
  <artifactId>acubesat</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>AcubeSAT Mission Control</name>
  <url>https://acubesat.spacedot.gr//</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!--
    Update this to the latest Yamcs release.
    Check https://mvnrepository.com/artifact/org.yamcs/yamcs-core
    -->
    <yamcsVersion>5.7.9</yamcsVersion>
    <webdir>src/main/frontend/webapp/dist/opsmci</webdir>
  </properties>

  <dependencies>
    <!-- Yamcs core framework -->
    <dependency>
      <groupId>org.yamcs</groupId>
      <artifactId>yamcs-core</artifactId>
      <version>${yamcsVersion}</version>
    </dependency>
    <!-- Add this dependency to enable the web ui. -->
    <!-- <dependency>
      <groupId>org.yamcs</groupId>
      <artifactId>yamcs-web</artifactId>
      <version>${yamcsVersion}</version>
    </dependency> -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.14.1</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.9</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>

    <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>1.9.1</version>
        <configuration>
          <nodeVersion>v18.14.0</nodeVersion>
          <workingDirectory>src/main/frontend/webapp</workingDirectory>
          <skip>${prodDockerBuild}</skip>
        </configuration>
        <executions>
          <execution>
          <phase>initialize</phase>
            <id>install-npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
          </execution>
          <execution>
            <phase>initialize</phase>
            <id>npm install</id>
            <goals>
              <goal>npm</goal>
            </goals>
          </execution>
          <execution>
          <phase>initialize</phase>
            <id>build</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>run-script build</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.2.0</version>
        <configuration>
          <skip>${prodDockerBuild}</skip>
        </configuration>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/webapp/static</outputDirectory>
              <resources>
                <resource>
                  <directory>${webdir}</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-manifest</id>
            <phase>validate</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <fileset id="webfiles" dir="${basedir}/target/webapp/static" />
                <property name="prop.webfiles" refid="webfiles" />
                <echo file="${basedir}/target/webapp/static/manifest.txt">${prop.webfiles}</echo>
                <!-- <copy todir="${project.build.directory}/target/webapp/static/manifest.txt">
                  <fileset dir="${project.basedir}/target/webapp/static"></fileset>
                </copy> -->
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <release>11</release>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.yamcs</groupId>
        <artifactId>yamcs-maven-plugin</artifactId>
        <version>1.2.7</version>
      </plugin>

      <plugin>
        <groupId>org.yamcs</groupId>
        <artifactId>yamcs-maven-plugin</artifactId>
        <version>1.2.7</version>
        <executions>
          <!-- Tell Maven to bundle Yamcs into a tar.gz file
               when the 'mvn package' command is run -->
          <execution>
            <id>bundle-yamcs</id>
            <phase>package</phase>
            <goals>
              <goal>bundle</goal>
            </goals>
            <configuration>
              <formats>
                <format>tar.gz</format>
              </formats>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <!-- <profiles>
    <profile>
      <activation>
        <file>
          <missing>src/main/frontend</missing>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
          <artifactId>exec-maven-plugin</artifactId>
          <groupId>org.codehaus.mojo</groupId>
          <version>1.6.0</version>
          <executions>
            <execution>
              <id>clone repo</id>
              <goals>
                <goal>exec</goal>
              </goals>
              <phase>validate</phase>
              <configuration>
                <executable>git</executable>
                <arguments>
                  <argument>clone</argument>
                  <argument>-b</argument>
                  <argument>real-time-graphs</argument>
                  <argument>https://gitlab.com/acubesat/ops/frontend-software.git</argument>
                  <argument>src/main/frontend</argument>
                </arguments>
              </configuration>
            </execution>
          </executions>
          </plugin>
        <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>1.9.1</version>
        <configuration>
          <nodeVersion>v18.14.0</nodeVersion>
          <workingDirectory>src/main/frontend</workingDirectory>
          <skip>${prodDockerBuild}</skip>
        </configuration>
        <executions>
          <execution>
          <phase>initialize</phase>
            <id>install-npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
          </execution>
          <execution>
            <phase>initialize</phase>
            <id>npm install</id>
            <goals>
              <goal>npm</goal>
            </goals>
          </execution>
          <execution>
          <phase>initialize</phase>
            <id>build</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>run-script build</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.2.0</version>
        <configuration>
          <skip>${prodDockerBuild}</skip>
        </configuration>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/static</outputDirectory>
              <resources>
                <resource>
                  <directory>${webdir}</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-manifest</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <fileset id="webfiles" dir="${basedir}/target/frontend/static" />
                <property name="prop.webfiles" refid="webfiles" />
                <echo file="${basedir}/target/frontend/static/manifest.txt">${prop.webfiles}</echo>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
        </plugins>
      </build>
    </profile>
  </profiles> -->
</project>
