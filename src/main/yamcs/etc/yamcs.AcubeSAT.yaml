services:
  - class: org.yamcs.archive.XtceTmRecorder
  - class: org.yamcs.archive.ParameterRecorder
  - class: org.yamcs.archive.AlarmRecorder
  - class: org.yamcs.archive.EventRecorder
  - class: org.yamcs.archive.ReplayServer
  - class: org.yamcs.parameter.SystemParametersService
    args:
      provideJvmVariables: true
      provideFsVariables: true
  - class: org.yamcs.ProcessorCreatorService
    args:
      name: realtime
      type: realtime
  - class: org.yamcs.archive.CommandHistoryRecorder
  - class: org.yamcs.parameterarchive.ParameterArchive
    args:
      realtimeFiller:
        enabled: true
      backFiller:
        enabled: false
        warmupTime: 60

dataLinks:
  - name: CAN-bus
    enableAtStartup: true
    class: org.yamcs.tctm.TcpTmDataLink
    stream: tm_realtime
    host: localhost
    port: 10017
    packetPreprocessorClassName: gr.spacedot.acubesat.CustomPacketPreprocessor

  - name: ADCS-UART
    enableAtStartup: true
    class: org.yamcs.tctm.TcpTmDataLink
    stream: tm_realtime
    host: localhost
    port: 10016
    packetPreprocessorClassName: gr.spacedot.acubesat.CustomPacketPreprocessor

  - name: OBC-UART
    enableAtStartup: true
    class: org.yamcs.tctm.TcpTmDataLink
    stream: tm_realtime
    host: localhost
    port: 10015
    packetPreprocessorClassName: gr.spacedot.acubesat.CustomPacketPreprocessor

  - name: COMMS
    enableAtStartup: true
    class: org.yamcs.tctm.TcpTmDataLink
    stream: tm_realtime
    host: localhost
    port: 10014
    packetPreprocessorClassName: gr.spacedot.acubesat.CustomPacketPreprocessor
    packetInputStreamClassName: gr.spacedot.acubesat.CustomCcsdsPacketInputStream
    packetInputStreamArgs: 
      maxPacketLength: 10000

  - name: UDP_COMMS
    enabledAtStartup: true
    class: gr.spacedot.acubesat.comms_link.UdpTmFrameLink
    port: 10013 #UDP port to listen to
    frameType: "TM"
    spacecraftId: 0xAB
    frameHeaderStream: "frame_header"
    # adjust the frameLength  depending on the frame sent via the simulator
    frameLength: 176 # 189 for the "frame_3_packets" frame // 176 for the "frame_2_packets_with_clcw" frame 
    # 172 for the "frame_2_packets" frame
    packetPreprocessorClassName: gr.spacedot.acubesat.CustomPacketPreprocessor
    insertZoneLength: 0 #ignored for TM frames
    errorDetection: NONE #NONE, CRC16 or CRC32 (only for USLP)
    clcwStream: "clcw"    #publish the received CLCW (what they call OCF in the CCSDS AOS/TM/USLP standards) to this stream, to be used by the FOP1 
    goodFrameStream: "good_frame_stream" #publish the good frames on this stream
    badFrameStream: "bad_frame_stream"   #publish the bad frames on this stream
    virtualChannels:
      - vcId: 0
        service: "PACKET"  
        maxPacketLength: 2048
        packetPreprocessorClassName: gr.spacedot.acubesat.CustomPacketPreprocessor
        stream: "tm_realtime" #which yamcs stream to put the data on
      - vcId: 1 
        service: "PACKET" 
        maxPacketLength: 2048
        stripEncapsulationHeader: true # drop the header before passing the packet to the preprocessor
        packetPreprocessorClassName: gr.spacedot.acubesat.CustomPacketPreprocessor
        packetPreprocessorArgs:
          timestampOffset: 2 #where to read the 8 bytes timestamp offset from
          seqCountOffset: 10 #where to read the 4 bytes sequence count from
          errorDetection: #last two bytes are used for the error detection
            type: "CRC-16-CCIIT" 
        stream: "tm_realtime"
        invalidPackets: DIVERT
        invalidPacketsStream: invalid_tm_stream
      - vcId: 2
        service: "PACKET" 
        maxPacketLength: 2048
        packetPreprocessorClassName: gr.spacedot.acubesat.CustomPacketPreprocessor
        stream: "tm_dump"
      #vcId 63 is reserved for idle data and it does not have to be defined
      

  - name: tcp-out
    enableAtStartup: true
    class: org.yamcs.tctm.TcpTcDataLink
    stream: tc_realtime
    host: localhost
    port: 10025
    commandPostprocessorClassName: gr.spacedot.acubesat.CustomCommandPostprocessor

mdb:
  # Configuration of the active loaders
  # Valid loaders are: sheet, xtce or fully qualified name of the class
- type: "xtce"
  spec: "mdb/dt.xml"
- type: xtce
  spec: "mdb/xtce.xml"
- type: xtce
  spec: "mdb/pus.xml"
- type: xtce
  spec: "mdb/pus-verification.xml"
- type: xtce
  spec: "mdb/pus-not-used.xml"
- type: xtce
  spec: "mdb/time-based-scheduling.xml"
- type: xtce
  spec: "mdb/set-values.xml"
- type: xtce
  spec: "mdb/report-values.xml"




# Configuration for streams created at server startup
streamConfig:
  tm:
    - name: "tm_realtime"
    - name: "tm_dump"
    - name: "clcw"
      rootContainer: "/pus/communications_link_control_word"
    - name: "frame_header"
      rootContainer: "/pus/Transfer_Frame_Primary_Header"
  invalidTm: "invalid_tm_stream"
  cmdHist: ["cmdhist_realtime", "cmdhist_dump"]
  event: ["events_realtime", "events_dump"]
  param: ["pp_realtime", "sys_param", "proc_param"]
  parameterAlarm: ["alarms_realtime"]
  tc:
    - name: "tc_realtime"
      processor: "realtime"
